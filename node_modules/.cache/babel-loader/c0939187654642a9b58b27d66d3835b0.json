{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/src/components/Comment.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comment = props => {\n  function createComment(comment, jmod) {\n    console.log('hit here');\n    let token = localStorage.getItem(\"token\");\n    fetch('https://jmod-tracker.herokuapp.com/comments', {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        body: `${comment.data.body}`,\n        permalink: `${comment.data.permalink}`,\n        jmod: `${jmod}`\n      })\n    }).then(res => console.log(res)).then(console.log());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.comment.data.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `https://reddit.com${props.comment.data.permalink}`,\n      children: [\"https://reddit.com\", props.comment.data.permalink]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pin\",\n      onClick: e => {\n        createComment(props.comment, props.jmod);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 17\n  }, this);\n};\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/src/components/Comment.js"],"names":["React","Comment","props","createComment","comment","jmod","console","log","token","localStorage","getItem","fetch","method","headers","body","JSON","stringify","data","permalink","then","res","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEI,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,WAASC,aAAT,CAAyBC,OAAzB,EAAkCC,IAAlC,EAAyC;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAC,IAAAA,KAAK,CAAC,6CAAD,EAAgD;AACjDC,MAAAA,MAAM,EAAE,MADyC;AAEjDC,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASL,KAAM,EAD5B;AAEL,wBAAiB,kBAFZ;AAGL,kBAAW;AAHN,OAFwC;AAOjDM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBF,QAAAA,IAAI,EAAG,GAAEV,OAAO,CAACa,IAAR,CAAaH,IAAK,EADV;AAEjBI,QAAAA,SAAS,EAAG,GAAEd,OAAO,CAACa,IAAR,CAAaC,SAAU,EAFpB;AAGjBb,QAAAA,IAAI,EAAG,GAAEA,IAAK;AAHG,OAAf;AAP2C,KAAhD,CAAL,CAaCc,IAbD,CAaMC,GAAG,IAAId,OAAO,CAACC,GAAR,CAAYa,GAAZ,CAbb,EAcCD,IAdD,CAcMb,OAAO,CAACC,GAAR,EAdN;AAeH;;AACG,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA,gBAAIL,KAAK,CAACE,OAAN,CAAca,IAAd,CAAmBH;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,IAAI,EAAG,qBAAoBZ,KAAK,CAACE,OAAN,CAAca,IAAd,CAAmBC,SAAU,EAA3D;AAAA,uCAAiFhB,KAAK,CAACE,OAAN,CAAca,IAAd,CAAmBC,SAApG;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAGG,CAAD,IAAO;AAAClB,QAAAA,aAAa,CAACD,KAAK,CAACE,OAAP,EAAgBF,KAAK,CAACG,IAAtB,CAAb;AAAyC;AAAlF;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQX,CA7BG;;KAAMJ,O;AA8BV,eAAeA,OAAf","sourcesContent":["import React from 'react'\n\n    const Comment = (props) => {\n\n        function createComment  (comment, jmod)  {\n            console.log('hit here')\n            let token = localStorage.getItem(\"token\")\n            fetch('https://jmod-tracker.herokuapp.com/comments', {\n                method: \"POST\",\n                headers: {\n                    \"Authorization\": `Bearer ${token}`,\n                    \"Content-Type\" : \"application/json\",\n                    \"Accept\" : \"application/json\"\n                },\n                body: JSON.stringify({\n                    body: `${comment.data.body}`,\n                    permalink: `${comment.data.permalink}`,\n                    jmod: `${jmod}`    \n                })\n            })\n            .then(res => console.log(res))\n            .then(console.log())\n        }\n            return (\n                <div className=\"card\">\n                    <p>{props.comment.data.body}</p>\n                    <a href={`https://reddit.com${props.comment.data.permalink}`}>https://reddit.com{props.comment.data.permalink}</a>\n                    <button className=\"pin\" onClick={(e) => {createComment(props.comment, props.jmod)}}></button>\n                </div>\n\n            )\n}\nexport default Comment"]},"metadata":{},"sourceType":"module"}