{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/components/Search.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: \"\",\n      reddit: \"\",\n      id: 0\n    };\n\n    this.handleChange = e => {\n      let query = e.target.value;\n      this.setState({\n        query\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let token = localStorage.getItem(\"token\");\n      console.log(`sending fetch for ${this.state.query}`);\n      fetch('http://localhost:3000/search', {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: `${this.state.query}`\n        })\n      }).then(res => res.text()).then(console.log);\n    };\n\n    this.handleReddit = e => {\n      e.preventDefault();\n      let token = localStorage.getItem(\"token\");\n      console.log(`sending reddit request for ${this.state.reddit}`);\n      fetch('http://localhost:3000/reddit', {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: `${this.state.query}`\n        })\n      }).then(res => res.text()).then(console.log);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleReddit,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Search\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/components/Search.js"],"names":["React","Form","Search","Component","state","query","reddit","id","handleChange","e","target","value","setState","handleSubmit","preventDefault","token","localStorage","getItem","console","log","fetch","method","headers","body","JSON","stringify","name","then","res","text","handleReddit","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAGA,eAAe,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAChDC,KADgD,GACxC;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,EAAE,EAAE;AAHA,KADwC;;AAAA,SAMhDC,YANgD,GAMhCC,CAAD,IAAO;AAClB,UAAIJ,KAAK,GAAII,CAAC,CAACC,MAAF,CAASC,KAAtB;AACA,WAAKC,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd;AACD,KAT6C;;AAAA,SAWhDQ,YAXgD,GAWhCJ,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACK,cAAF;AACA,UAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoB,KAAKf,KAAL,CAAWC,KAAM,EAAlD;AACAe,MAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClCC,QAAAA,MAAM,EAAE,MAD0B;AAElCC,QAAAA,OAAO,EAAE;AACL,2BAAkB,UAASP,KAAM,EAD5B;AAEL,0BAAiB,kBAFZ;AAGL,oBAAW;AAHN,SAFyB;AAOlCQ,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,IAAI,EAAG,GAAE,KAAKtB,KAAL,CAAWC,KAAM;AADP,SAAf;AAP4B,OAAjC,CAAL,CAYCsB,IAZD,CAYMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAZb,EAaCF,IAbD,CAaMT,OAAO,CAACC,GAbd;AAcH,KA7B+C;;AAAA,SA+BhDW,YA/BgD,GA+BhCrB,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACK,cAAF;AACA,UAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,8BAA6B,KAAKf,KAAL,CAAWE,MAAO,EAA5D;AACAc,MAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClCC,QAAAA,MAAM,EAAE,MAD0B;AAElCC,QAAAA,OAAO,EAAE;AACL,2BAAkB,UAASP,KAAM,EAD5B;AAEL,0BAAiB,kBAFZ;AAGL,oBAAW;AAHN,SAFyB;AAOlCQ,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,IAAI,EAAG,GAAE,KAAKtB,KAAL,CAAWC,KAAM;AADP,SAAf;AAP4B,OAAjC,CAAL,CAYCsB,IAZD,CAYMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAZb,EAaCF,IAbD,CAaMT,OAAO,CAACC,GAbd;AAcH,KAjD+C;AAAA;;AAmDhDY,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACA,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKD,YAArB;AAAA,+BACI,QAAC,IAAD,CAAM,KAAN;AAAA,iCACI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,WAAW,EAAC,QAAtC;AAA+C,YAAA,QAAQ,EAAE,KAAKtB;AAA9D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAMA;AAAA,kBAAI,KAAKJ,KAAL,CAAWC;AAAf;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA9D+C","sourcesContent":["import React from 'react'\nimport Form from 'react-bootstrap/Form'\n\n\nexport default class Search extends React.Component {\n    state = {\n        query: \"\",\n        reddit: \"\",\n        id: 0\n    }\n    handleChange = (e) => {\n        let query =  e.target.value\n        this.setState({query})\n      }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        let token = localStorage.getItem(\"token\")\n        console.log(`sending fetch for ${this.state.query}`)\n        fetch('http://localhost:3000/search', {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n                \"Content-Type\" : \"application/json\",\n                \"Accept\" : \"application/json\"\n            },\n            body: JSON.stringify({\n              name: `${this.state.query}`\n            })\n\n        })\n        .then(res => res.text())\n        .then(console.log)\n    }\n\n    handleReddit = (e) => {\n        e.preventDefault()\n        let token = localStorage.getItem(\"token\")\n        console.log(`sending reddit request for ${this.state.reddit}`)\n        fetch('http://localhost:3000/reddit', {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n                \"Content-Type\" : \"application/json\",\n                \"Accept\" : \"application/json\"\n            },\n            body: JSON.stringify({\n              name: `${this.state.query}`\n            })\n\n        })\n        .then(res => res.text())\n        .then(console.log)\n    }\n\n    render(){\n        return (\n            <div>\n            <Form onSubmit={this.handleReddit}>\n                <Form.Group>\n                    <Form.Control type=\"text\" placeholder=\"Search\" onChange={this.handleChange}/>\n                </Form.Group>\n            </Form>\n            <p>{this.state.query}</p>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}