{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/containers/HomeContainer.js\";\nimport React, { Component } from 'react'; //import Button from 'react-bootstrap/Button'\n\nimport Login from '../components/Login';\nimport Signup from '../components/Signup';\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HomeContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loggedIn: false,\n      signup: false,\n      user: \"\",\n      userId: 1\n    };\n\n    this.handleLoginChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleLoginSubmit = e => {\n      let username = this.state.username;\n      let password = this.state.password;\n      let info = {\n        username: username,\n        password: password\n      };\n      fetch(\"http://localhost:3000//api/v1/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user: info\n        })\n      }).then(rsp => rsp.json()).then(json => {\n        if (json.user) {\n          this.setState({\n            loggedIn: !this.state.loggedIn,\n            user: json.user.username,\n            userId: json.user.id\n          })(localStorage.setItem(\"token\", json.jwt) && localStorage.setItem(\"user\", json.user.id) && this.props.history.push(\"/home\"));\n        } else {\n          this.setState({\n            error: json.message\n          });\n        }\n      });\n    };\n\n    this.loggedIn = () => {\n      let token = localStorage.getItem(\"token\");\n\n      if (token) {\n        /*#__PURE__*/\n        _jsxDEV(Redirect, {\n          to: \"/home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 16\n        }, this);\n      } else {\n        if (this.state.signup) {\n          return /*#__PURE__*/_jsxDEV(Signup, {\n            toggleLogin: this.toggleLogin,\n            handleLoginChange: this.handleLoginChange,\n            handleSignupSubmit: this.handleSignupSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 26\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Login, {\n            handleLoginChange: this.handleLoginChange,\n            handleLoginSubmit: this.handleLoginSubmit,\n            toggleLogin: this.toggleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 26\n          }, this);\n        }\n      }\n    };\n\n    this.toggleLogin = e => {\n      this.setState(prevState => ({\n        signup: !prevState.signup\n      }));\n    };\n\n    this.handleSignupSubmit = e => {\n      let username = this.state.username;\n      let password = this.state.password;\n      let info = {\n        username: username,\n        password: password\n      };\n      fetch(\"http://localhost:3000/api/v1/users/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user: info\n        })\n      }).then(rsp => rsp.json()).then(console.log()); // .then(json => {\n      //   this.setState({\n      //     loggedIn: !this.state.loggedIn,\n      //     user: json.user.username,\n      //     userId: json.user.id\n      //   })\n      //   localStorage.setItem(\"token\", json.jwt)\n      //   localStorage.setItem(\"user\",json.user.id)\n      //   this.props.history.push(\"/home\")\n      // })\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.error ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 35\n      }, this) : null, this.loggedIn()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default HomeContainer;","map":{"version":3,"sources":["/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/containers/HomeContainer.js"],"names":["React","Component","Login","Signup","Redirect","HomeContainer","state","loggedIn","signup","user","userId","handleLoginChange","e","setState","target","name","value","handleLoginSubmit","username","password","info","fetch","method","headers","body","JSON","stringify","then","rsp","json","id","localStorage","setItem","jwt","props","history","push","error","message","token","getItem","toggleLogin","handleSignupSubmit","prevState","console","log","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\n//import Button from 'react-bootstrap/Button'\nimport Login from '../components/Login'\nimport Signup from '../components/Signup'\nimport { Redirect } from \"react-router-dom\";\n\n\nclass HomeContainer extends Component {\n\n    state = {\n        loggedIn: false,\n        signup: false,\n        user: \"\",\n        userId: 1\n    }\n\n\n\n    \n    handleLoginChange = (e) => {\n        this.setState({\n          [e.target.name] : e.target.value\n        })\n      }\n    \n    \n     handleLoginSubmit = (e) => {\n        let username = this.state.username\n        let password = this.state.password\n        let info = {username: username, password: password}\n        fetch(\"http://localhost:3000//api/v1/login\",{\n          method: \"POST\",\n          headers: {\n            \"Content-Type\" : \"application/json\",\n            \"Accept\" : \"application/json\"\n          },\n          body: JSON.stringify({\n            user: info\n          })\n        })\n        .then(rsp => rsp.json())\n        .then(json => {\n          if (json.user) {\n            this.setState({\n                loggedIn: !this.state.loggedIn,\n                user: json.user.username,\n                userId: json.user.id\n            })\n            (localStorage.setItem(\"token\", json.jwt) &&\n            localStorage.setItem(\"user\",json.user.id) &&\n            this.props.history.push(\"/home\"))\n         }\n         else{ \n           this.setState({error: json.message})\n          }\n\n        })\n    \n      }\n    \n      loggedIn = () => {\n        let token = localStorage.getItem(\"token\")\n          if (token) {\n               <Redirect to=\"/home\" />\n          } else {\n              if (this.state.signup) {\n                  return <Signup toggleLogin={this.toggleLogin}  handleLoginChange={this.handleLoginChange} handleSignupSubmit={this.handleSignupSubmit}/>\n              } else {\n                  return <Login handleLoginChange={this.handleLoginChange} handleLoginSubmit={this.handleLoginSubmit} toggleLogin={this.toggleLogin} />\n              }\n          }\n      }\n    \n      toggleLogin = (e) => {\n        this.setState(prevState => ({\n          signup: !prevState.signup\n        }));\n      }\n    \n      handleSignupSubmit = (e) => {\n        let username = this.state.username\n        let password = this.state.password\n        let info = {username: username, password: password}\n        fetch(\"http://localhost:3000/api/v1/users/\",{\n          method: \"POST\",\n          headers: {\n            \"Content-Type\" : \"application/json\",\n            \"Accept\" : \"application/json\"\n          },\n          body: JSON.stringify({\n            user: info\n          })\n        })\n        .then(rsp => rsp.json())\n        .then(console.log())\n        // .then(json => {\n        //   this.setState({\n        //     loggedIn: !this.state.loggedIn,\n        //     user: json.user.username,\n        //     userId: json.user.id\n        //   })\n        //   localStorage.setItem(\"token\", json.jwt)\n        //   localStorage.setItem(\"user\",json.user.id)\n        //   this.props.history.push(\"/home\")\n        // })\n      }\n\n\n    render() {\n        return(\n            <div>\n              {this.state.error ? <h4>{this.state.error}</h4> : null }\n              {this.loggedIn()}\n            </div>\n        )\n    }\n}\n\nexport default HomeContainer\n"]},"metadata":{},"sourceType":"module"}