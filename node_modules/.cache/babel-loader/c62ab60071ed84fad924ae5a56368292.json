{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/components/Jmod.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Jmod extends React.Component {\n  handleReddit(e) {\n    e.preventDefault();\n    let token = localStorage.getItem(\"token\");\n    fetch('http://localhost:3000/reddit', {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: `${props.jmod.name}`\n      })\n    }).then(res => res.json()).then(res => this.setState({\n      comments: res.data.children\n    }));\n  }\n\n  handleTwitter(e) {\n    e.preventDefault();\n    let token = localStorage.getItem(\"token\");\n    fetch('http://localhost:3000/search', {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: `${props.jmod.name}`\n      })\n    }).then(res => res.json()).then(console.log);\n  } //to iterate over twitter response\n  //response comes out as\n  //{data: [{\"text\": \"blah blah\", \"id\": \"number_string\"}]} 10 objects return inside the array.\n  //to generate link to tweet:\n  //https://twitter.com/${username}/status/${id}\n  //when user doesn't exist, return is:\n  //{errors:{detail: \"blah blah blah\"}}\n  //to iterate over reddit response\n  //response comes out as\n  //{data: {children: [{data: {body: text, permalink: text}}, {}, {}]}}\n  //to generate link to comment:\n  //https://reddit.com/${permalink}\n  //if user isn't found, response is {message: \"Not Found\"}\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.jmod.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-primary\",\n        onClick: e => {\n          handleTwitter(e);\n        },\n        children: \"Twitter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-primary\",\n        onClick: e => {\n          handleReddit(e);\n        },\n        children: \"Reddit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 94\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Jmod;","map":{"version":3,"sources":["/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/components/Jmod.js"],"names":["React","Jmod","Component","handleReddit","e","preventDefault","token","localStorage","getItem","fetch","method","headers","body","JSON","stringify","name","props","jmod","then","res","json","setState","comments","data","children","handleTwitter","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAE9BC,EAAAA,YAAY,CAAEC,CAAF,EAAK;AACdA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAC,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClCC,MAAAA,MAAM,EAAE,MAD0B;AAElCC,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASL,KAAM,EAD5B;AAEL,wBAAiB,kBAFZ;AAGL,kBAAW;AAHN,OAFyB;AAOlCM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAG,GAAEC,KAAK,CAACC,IAAN,CAAWF,IAAK;AADN,OAAf;AAP4B,KAAjC,CAAL,CAYCG,IAZD,CAYMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAZb,EAaCF,IAbD,CAaMC,GAAG,IAAI,KAAKE,QAAL,CAAc;AACtBC,MAAAA,QAAQ,EAAEH,GAAG,CAACI,IAAJ,CAASC;AADG,KAAd,CAbb;AAiBH;;AAEAC,EAAAA,aAAa,CAAGrB,CAAH,EAAO;AACjBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAC,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClCC,MAAAA,MAAM,EAAE,MAD0B;AAElCC,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASL,KAAM,EAD5B;AAEL,wBAAiB,kBAFZ;AAGL,kBAAW;AAHN,OAFyB;AAOlCM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAG,GAAEC,KAAK,CAACC,IAAN,CAAWF,IAAK;AADN,OAAf;AAP4B,KAAjC,CAAL,CAYCG,IAZD,CAYMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAZb,EAaCF,IAbD,CAaMQ,OAAO,CAACC,GAbd;AAcH,GAzC8B,CA0C/B;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAE;AACR,wBACI;AAAA,8BACA;AAAA,kBAAKZ,KAAK,CAACC,IAAN,CAAWF;AAAhB;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,KAAK,EAAC,iBAAd;AAAgC,QAAA,OAAO,EAAGX,CAAD,IAAO;AAACqB,UAAAA,aAAa,CAACrB,CAAD,CAAb;AAAiB,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,oBAEqF;AAAQ,QAAA,KAAK,EAAC,iBAAd;AAAgC,QAAA,OAAO,EAAGA,CAAD,IAAO;AAACD,UAAAA,YAAY,CAACC,CAAD,CAAZ;AAAgB,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFrF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMC;;AAjE8B;;AAmEnC,eAAeH,IAAf","sourcesContent":["import React from 'react'\n\n\nclass Jmod extends React.Component {\n\n     handleReddit (e) {\n        e.preventDefault()\n        let token = localStorage.getItem(\"token\")\n        fetch('http://localhost:3000/reddit', {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n                \"Content-Type\" : \"application/json\",\n                \"Accept\" : \"application/json\"\n            },\n            body: JSON.stringify({\n              name: `${props.jmod.name}`\n            })\n\n        })\n        .then(res => res.json())\n        .then(res => this.setState({\n             comments: res.data.children\n        }\n        ))\n    }\n\n     handleTwitter  (e)  {\n        e.preventDefault()\n        let token = localStorage.getItem(\"token\")\n        fetch('http://localhost:3000/search', {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n                \"Content-Type\" : \"application/json\",\n                \"Accept\" : \"application/json\"\n            },\n            body: JSON.stringify({\n              name: `${props.jmod.name}`\n            })\n\n        })\n        .then(res => res.json())\n        .then(console.log)\n    }\n    //to iterate over twitter response\n    //response comes out as\n    //{data: [{\"text\": \"blah blah\", \"id\": \"number_string\"}]} 10 objects return inside the array.\n    //to generate link to tweet:\n    //https://twitter.com/${username}/status/${id}\n\n\n    //when user doesn't exist, return is:\n    //{errors:{detail: \"blah blah blah\"}}\n    //to iterate over reddit response\n    //response comes out as\n    //{data: {children: [{data: {body: text, permalink: text}}, {}, {}]}}\n    //to generate link to comment:\n    //https://reddit.com/${permalink}\n    //if user isn't found, response is {message: \"Not Found\"}\n\n    render(){\n    return (\n        <div>\n        <h1>{props.jmod.name}</h1>\n        <button class=\"btn btn-primary\" onClick={(e) => {handleTwitter(e)}}>Twitter</button> <button class=\"btn btn-primary\" onClick={(e) => {handleReddit(e)}}>Reddit</button> \n        </div>\n    )\n    }\n}\nexport default Jmod"]},"metadata":{},"sourceType":"module"}