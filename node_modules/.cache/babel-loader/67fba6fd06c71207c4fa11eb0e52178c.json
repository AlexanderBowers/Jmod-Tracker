{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/components/Profile.js\";\nimport React, { Component } from 'react';\nimport PinCommentContainer from '../containers/PinCommentContainer';\nimport PinTweetContainer from '../containers/PinTweetContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.removeTweet = tweet => {\n      this.setState(prevState => ({\n        tweets: prevState.tweets.filter(list => list != tweet)\n      }));\n    };\n\n    this.removeComment = comment => {\n      this.setState(prevState => ({\n        comments: prevState.comments.filter(list => list != comment)\n      }));\n    };\n\n    this.state = {\n      active: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem(\"token\");\n    token ? fetch(`http://localhost:3000/api/v1/profile`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        tweets: data.tweets,\n        comments: data.comments,\n        user: data.user.username\n      });\n    }) : this.props.history.push(\"/\");\n  }\n\n  renderSwitch(state) {\n    switch (state) {\n      case \"reddit\":\n        return /*#__PURE__*/_jsxDEV(PinCommentContainer, {\n          comments: this.state.comments,\n          removeComment: this.removeComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }, this);\n\n      case \"twitter\":\n        return /*#__PURE__*/_jsxDEV(PinTweetContainer, {\n          tweets: this.state.tweets,\n          removeTweet: this.removeTweet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 24\n        }, this);\n\n      default:\n        return \"\";\n    }\n  }\n\n  handleTwitter(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      active: \"twitter\"\n    }));\n  }\n\n  handleReddit(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      active: \"reddit\"\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Pins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"twitter\",\n        onClick: e => {\n          this.handleTwitter(e);\n        },\n        children: \"Twitter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reddit\",\n        onClick: e => {\n          this.handleReddit(e);\n        },\n        children: \"Reddit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 99\n      }, this), this.renderSwitch(this.state.active)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/components/Profile.js"],"names":["React","Component","PinCommentContainer","PinTweetContainer","Profile","removeTweet","tweet","setState","prevState","tweets","filter","list","removeComment","comment","comments","state","active","componentDidMount","token","localStorage","getItem","fetch","method","headers","Authorization","then","res","json","data","user","username","props","history","push","renderSwitch","handleTwitter","e","preventDefault","handleReddit","render"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react'\nimport PinCommentContainer from '../containers/PinCommentContainer'\nimport PinTweetContainer from '../containers/PinTweetContainer'\n\nclass Profile extends Component {\n\n    componentDidMount() {\n        let token = localStorage.getItem(\"token\")\n        token ? (\n        fetch(`http://localhost:3000/api/v1/profile`,{\n            method: \"GET\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n                tweets: data.tweets,\n                comments: data.comments,\n                user: data.user.username\n            })\n        })\n    ) : this.props.history.push(\"/\") \n    }\n\n    removeTweet = (tweet) => {\n        this.setState(prevState => ({\n            tweets: prevState.tweets.filter(list => list != tweet)\n        }))\n    }\n    \n    removeComment = (comment) => {\n        this.setState(prevState => ({\n            comments: prevState.comments.filter(list => list != comment)\n        }))\n    }\n     \n\n\n    state = {\n        active: \"\"\n    }\n\n    renderSwitch(state) {\n        switch(state) {\n            case \"reddit\":\n                return <PinCommentContainer comments={this.state.comments} removeComment={this.removeComment}/>\n            case \"twitter\":\n                return <PinTweetContainer tweets={this.state.tweets} removeTweet={this.removeTweet}/>\n            default:\n                return \"\"\n        }\n    }\n    handleTwitter  (e) {\n        e.preventDefault()\n            this.setState(prevState => ({\n                active: \"twitter\"\n\n            }))\n    }\n\n    handleReddit  (e) {\n        e.preventDefault()\n            this.setState(prevState => ({\n                active: \"reddit\"\n                \n            }))\n    }\n    \n     render(){\n        return (\n            <div className=\"Profile\">\n            <h1>Your Pins</h1>\n            <button className=\"twitter\" onClick={(e) => {this.handleTwitter(e)}}>Twitter</button> <button className=\"reddit\" onClick={(e) => {this.handleReddit(e)}}>Reddit</button>\n            {this.renderSwitch(this.state.active)}\n            </div>\n        )\n        }\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}