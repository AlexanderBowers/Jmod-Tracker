{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/src/containers/JmodPage.js\";\nimport React, { Component } from 'react';\nimport Jmod from '../components/Jmod';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass JmodPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      jmod: this.props.jmod,\n      updates: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem(\"token\");\n    token ? fetch(`http://localhost:3000/jmods`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(jmods => {\n      this.setState({\n        jmods\n      });\n    }) : this.props.history.push(\"/\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"jmodList\",\n        children: [\"Mod Ash: Content developer for OSRS\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 76\n        }, this), \"Mod Zuko: Junior content developer for OSRS\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 64\n        }, this), \"Mod Ramen: Content developer for RS3\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 57\n        }, this), \"Mod Pi: Senior Gameplay Programmer and Combat Curator for RS3\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 82\n        }, this), \"Mod Shogun: Ninja Team content developer for RS3\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 69\n        }, this), \"Mod Kari: Community Manager for RS3\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), this.props.jmod !== \"\" ? /*#__PURE__*/_jsxDEV(Jmod, {\n        jmod: this.props.jmod\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this) : this.state.jmods ? this.state.jmods.map(jmod => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"jmod\",\n            onClick: () => {\n              this.props.activeMod(jmod);\n            },\n            children: jmod\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 28\n        }, this);\n      }) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default JmodPage;","map":{"version":3,"sources":["/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/src/containers/JmodPage.js"],"names":["React","Component","Jmod","JmodPage","state","jmod","props","updates","componentDidMount","token","localStorage","getItem","fetch","method","headers","Authorization","then","res","json","jmods","setState","history","push","render","map","activeMod"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE9BG,KAF8B,GAEtB;AACJC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADb;AAEJE,MAAAA,OAAO,EAAE;AAFL,KAFsB;AAAA;;AAO7BC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACCF,IAAAA,KAAK,GACNG,KAAK,CAAE,6BAAF,EAAgC;AACjCC,MAAAA,MAAM,EAAE,KADyB;AAEjCC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,UAASN,KAAM;AAD1B;AAFwB,KAAhC,CAAL,CAMCO,IAND,CAMMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANb,EAOCF,IAPD,CAOMG,KAAK,IAAI;AAAC,WAAKC,QAAL,CAAc;AAACD,QAAAA;AAAD,OAAd;AAAuB,KAPvC,CADM,GASP,KAAKb,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,CATE;AAUJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA,uEAA2D;AAAA;AAAA;AAAA;AAAA,gBAA3D,8DAC+C;AAAA;AAAA;AAAA;AAAA,gBAD/C,uDAEwC;AAAA;AAAA;AAAA;AAAA,gBAFxC,gFAGiE;AAAA;AAAA;AAAA;AAAA,gBAHjE,mEAIoD;AAAA;AAAA;AAAA;AAAA,gBAJpD,sDAKuC;AAAA;AAAA;AAAA;AAAA,gBALvC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAUK,KAAKjB,KAAL,CAAWD,IAAX,KAAoB,EAApB,gBACD,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD;AAAvB;AAAA;AAAA;AAAA;AAAA,cADC,GACiC,KAAKD,KAAL,CAAWe,KAAX,GACjC,KAAKf,KAAL,CAAWe,KAAX,CAAiBK,GAAjB,CAAqBnB,IAAI,IAAI;AAC1B,4BAAO,QAAC,KAAD,CAAO,QAAP;AAAA,uCAAiB;AAAQ,YAAA,SAAS,EAAC,MAAlB;AAAyB,YAAA,OAAO,EAAE,MAAM;AAAC,mBAAKC,KAAL,CAAWmB,SAAX,CAAqBpB,IAArB;AAA2B,aAApE;AAAA,sBAAuEA;AAAvE;AAAA;AAAA;AAAA;AAAA,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA,CADiC,GAG7B,IAdT;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAxC4B;;AA2CjC,eAAeF,QAAf","sourcesContent":["import React, {Component} from 'react'\nimport Jmod from '../components/Jmod'\n\nclass JmodPage extends Component {\n\n   state = {\n       jmod: this.props.jmod,\n       updates: \"\"\n   }\n\n    componentDidMount() {\n        let token = localStorage.getItem(\"token\")\n         token ? \n        fetch(`http://localhost:3000/jmods`, {\n            method: \"GET\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        })\n        .then(res => res.json())\n        .then(jmods => {this.setState({jmods})})\n     : this.props.history.push(\"/\") \n    }\n\n    render() {\n        return(\n            <div>\n                <p className=\"jmodList\">Mod Ash: Content developer for OSRS<br></br>\n                    Mod Zuko: Junior content developer for OSRS<br></br> \n                    Mod Ramen: Content developer for RS3<br></br>\n                    Mod Pi: Senior Gameplay Programmer and Combat Curator for RS3<br></br>\n                    Mod Shogun: Ninja Team content developer for RS3<br></br>\n                    Mod Kari: Community Manager for RS3<br></br>\n                   \n\n                </p>\n                {this.props.jmod !== \"\" ?\n                <Jmod jmod={this.props.jmod} /> : this.state.jmods ?\n                 this.state.jmods.map(jmod => {\n                    return <React.Fragment> <button className=\"jmod\" onClick={() => {this.props.activeMod(jmod)}}>{jmod}</button></React.Fragment>\n                }) : null }\n            </div>  \n        )\n    }\n}\n\nexport default JmodPage"]},"metadata":{},"sourceType":"module"}