{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/components/Search.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: \"\",\n      reddit: \"\",\n      id: 0,\n      comments: [],\n      tweets: [],\n      jmod: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.props.searchMod,\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Search Jmod\",\n          onChange: this.props.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n} // <div>\n//     Twitter Search\n// <Form onSubmit={this.handleSubmit}>\n//     <Form.Group>\n//         <Form.Control type=\"text\" placeholder=\"Search\" onChange={this.handleChange}/>\n//     </Form.Group>\n// </Form>\n// <br></br>\n//     Reddit Search\n//     <Form onSubmit={this.handleReddit}>\n//         <Form.Group>\n//             <Form.Control type=\"text\" placeholder=\"Search\" onChange={this.handleChange}/>\n//         </Form.Group>\n//     </Form>\n// <p>{this.state.query}</p>\n// <div>\n//     { this.state.comments.length > 0 ? this.state.comments.map(comment => {\n//          return <Comment body={comment.data.body} permalink={comment.data.permalink}/>\n//     }) : null}\n// </div>\n// </div>","map":{"version":3,"sources":["/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/components/Search.js"],"names":["React","Form","Search","Component","state","query","reddit","id","comments","tweets","jmod","render","props","searchMod","handleChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAIA,eAAe,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAChDC,KADgD,GACxC;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,EAAE,EAAE,CAHA;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,MAAM,EAAE,EALJ;AAMJC,MAAAA,IAAI,EAAE;AANF,KADwC;AAAA;;AAehDC,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,SAA3B;AAAA,6BAEI,QAAC,IAAD,CAAM,KAAN;AAAA,+BACI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,WAAW,EAAC,aAAtC;AAAoD,UAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE;AAAzE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAxB+C,C,CA2BpD;AACY;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport Form from 'react-bootstrap/Form'\n\n\n\nexport default class Search extends React.Component {\n    state = {\n        query: \"\",\n        reddit: \"\",\n        id: 0,\n        comments: [],\n        tweets: [],\n        jmod: \"\"\n    }\n    \n\n   \n\n    \n\n    render(){\n        return (\n            <Form onSubmit={this.props.searchMod}>\n                \n                <Form.Group>\n                    <Form.Control type=\"text\" placeholder=\"Search Jmod\" onChange={this.props.handleChange}/>\n                </Form.Group>\n            </Form>\n        )\n    }\n}\n\n// <div>\n            //     Twitter Search\n            // <Form onSubmit={this.handleSubmit}>\n            //     <Form.Group>\n            //         <Form.Control type=\"text\" placeholder=\"Search\" onChange={this.handleChange}/>\n            //     </Form.Group>\n            // </Form>\n\n            // <br></br>\n            //     Reddit Search\n            //     <Form onSubmit={this.handleReddit}>\n            //         <Form.Group>\n            //             <Form.Control type=\"text\" placeholder=\"Search\" onChange={this.handleChange}/>\n            //         </Form.Group>\n            //     </Form>\n            // <p>{this.state.query}</p>\n            // <div>\n               \n            //     { this.state.comments.length > 0 ? this.state.comments.map(comment => {\n            //          return <Comment body={comment.data.body} permalink={comment.data.permalink}/>\n            //     }) : null}\n            // </div>\n            // </div>"]},"metadata":{},"sourceType":"module"}