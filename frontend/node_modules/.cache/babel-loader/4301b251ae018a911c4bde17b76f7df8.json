{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/components/Jmod.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Jmod = props => {\n  function handleReddit(e) {\n    e.preventDefault();\n    let token = localStorage.getItem(\"token\");\n    console.log(`sending reddit request for ${this.state.query}`);\n    fetch('http://localhost:3000/reddit', {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: `${props.jmod.name}`\n      })\n    }).then(res => res.json()).then(res => this.setState({\n      comments: res.data.children\n    }));\n  }\n\n  function handleTwitter(e) {\n    e.preventDefault();\n    let token = localStorage.getItem(\"token\");\n    console.log(`sending fetch for ${this.state.query}`);\n    fetch('http://localhost:3000/search', {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: `${props.jmod.name}`\n      })\n    }).then(res => res.json()).then(console.log);\n  } //to iterate over twitter response\n  //response comes out as\n  //{data: [{\"text\": \"blah blah\", \"id\": \"number_string\"}]} 10 objects return inside the array.\n  //to generate link to tweet:\n  //https://twitter.com/${username}/status/${id}\n  //when user doesn't exist, return is:\n  //{errors:{detail: \"blah blah blah\"}}\n  //to iterate over reddit response\n  //response comes out as\n  //{data: {children: [{data: {body: text, permalink: text}}, {}, {}]}}\n  //to generate link to comment:\n  //https://reddit.com/${permalink}\n  //if user isn't found, response is {message: \"Not Found\"}\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.jmod.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: e => {\n        handleTwitter(e);\n      },\n      children: \"Twitter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: e => {\n        handleReddit(e);\n      },\n      children: \"Reddit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 94\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Jmod;\nexport default Jmod;\n\nvar _c;\n\n$RefreshReg$(_c, \"Jmod\");","map":{"version":3,"sources":["/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/components/Jmod.js"],"names":["React","Jmod","props","handleReddit","e","preventDefault","token","localStorage","getItem","console","log","state","query","fetch","method","headers","body","JSON","stringify","name","jmod","then","res","json","setState","comments","data","children","handleTwitter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAEpB,WAASC,YAAT,CAAuBC,CAAvB,EAA0B;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,8BAA6B,KAAKC,KAAL,CAAWC,KAAM,EAA3D;AACAC,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClCC,MAAAA,MAAM,EAAE,MAD0B;AAElCC,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAAST,KAAM,EAD5B;AAEL,wBAAiB,kBAFZ;AAGL,kBAAW;AAHN,OAFyB;AAOlCU,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAG,GAAEjB,KAAK,CAACkB,IAAN,CAAWD,IAAK;AADN,OAAf;AAP4B,KAAjC,CAAL,CAYCE,IAZD,CAYMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAZb,EAaCF,IAbD,CAaMC,GAAG,IAAI,KAAKE,QAAL,CAAc;AACtBC,MAAAA,QAAQ,EAAEH,GAAG,CAACI,IAAJ,CAASC;AADG,KAAd,CAbb;AAiBH;;AAED,WAASC,aAAT,CAAyBxB,CAAzB,EAA6B;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoB,KAAKC,KAAL,CAAWC,KAAM,EAAlD;AACAC,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClCC,MAAAA,MAAM,EAAE,MAD0B;AAElCC,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAAST,KAAM,EAD5B;AAEL,wBAAiB,kBAFZ;AAGL,kBAAW;AAHN,OAFyB;AAOlCU,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAG,GAAEjB,KAAK,CAACkB,IAAN,CAAWD,IAAK;AADN,OAAf;AAP4B,KAAjC,CAAL,CAYCE,IAZD,CAYMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAZb,EAaCF,IAbD,CAaMZ,OAAO,CAACC,GAbd;AAcH,GA3CmB,CA4CpB;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAA,4BACA;AAAA,gBAAKR,KAAK,CAACkB,IAAN,CAAWD;AAAhB;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,KAAK,EAAC,iBAAd;AAAgC,MAAA,OAAO,EAAGf,CAAD,IAAO;AAACwB,QAAAA,aAAa,CAACxB,CAAD,CAAb;AAAiB,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,oBAEqF;AAAQ,MAAA,KAAK,EAAC,iBAAd;AAAgC,MAAA,OAAO,EAAGA,CAAD,IAAO;AAACD,QAAAA,YAAY,CAACC,CAAD,CAAZ;AAAgB,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFrF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAlED;;KAAMH,I;AAmEN,eAAeA,IAAf","sourcesContent":["import React from 'react'\n\n\nconst Jmod = (props) => {\n\n    function handleReddit (e) {\n        e.preventDefault()\n        let token = localStorage.getItem(\"token\")\n        console.log(`sending reddit request for ${this.state.query}`)\n        fetch('http://localhost:3000/reddit', {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n                \"Content-Type\" : \"application/json\",\n                \"Accept\" : \"application/json\"\n            },\n            body: JSON.stringify({\n              name: `${props.jmod.name}`\n            })\n\n        })\n        .then(res => res.json())\n        .then(res => this.setState({\n             comments: res.data.children\n        }\n        ))\n    }\n\n    function handleTwitter  (e)  {\n        e.preventDefault()\n        let token = localStorage.getItem(\"token\")\n        console.log(`sending fetch for ${this.state.query}`)\n        fetch('http://localhost:3000/search', {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n                \"Content-Type\" : \"application/json\",\n                \"Accept\" : \"application/json\"\n            },\n            body: JSON.stringify({\n              name: `${props.jmod.name}`\n            })\n\n        })\n        .then(res => res.json())\n        .then(console.log)\n    }\n    //to iterate over twitter response\n    //response comes out as\n    //{data: [{\"text\": \"blah blah\", \"id\": \"number_string\"}]} 10 objects return inside the array.\n    //to generate link to tweet:\n    //https://twitter.com/${username}/status/${id}\n\n\n    //when user doesn't exist, return is:\n    //{errors:{detail: \"blah blah blah\"}}\n    //to iterate over reddit response\n    //response comes out as\n    //{data: {children: [{data: {body: text, permalink: text}}, {}, {}]}}\n    //to generate link to comment:\n    //https://reddit.com/${permalink}\n    //if user isn't found, response is {message: \"Not Found\"}\n\n    return (\n        <div>\n        <h1>{props.jmod.name}</h1>\n        <button class=\"btn btn-primary\" onClick={(e) => {handleTwitter(e)}}>Twitter</button> <button class=\"btn btn-primary\" onClick={(e) => {handleReddit(e)}}>Reddit</button> \n        </div>\n    )\n}\nexport default Jmod"]},"metadata":{},"sourceType":"module"}