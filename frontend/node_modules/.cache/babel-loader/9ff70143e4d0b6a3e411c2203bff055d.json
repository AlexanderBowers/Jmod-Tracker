{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/containers/JmodPage.js\";\nimport React, { Component } from 'react'; //import Button from 'react-bootstrap/Button'\n//import Container from 'react-bootstrap/Container';\n//import Row from 'react-bootstrap/Row'\n//import Col from 'react-bootstrap/Col'\n//import Search from '../components/Search';\n\nimport Jmod from '../components/Jmod';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HomePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      jmod: this.props.jmod\n    };\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem(\"token\");\n    let old_feed = localStorage.getItem(\"old_feed\");\n\n    if (old_feed === null) {\n      localStorage.setItem(\"old_feed\", {\n        jagexFiller: {\n          twitter: [],\n          reddit: []\n        }\n      });\n    }\n\n    token ? fetch(`http://localhost:3000/api/v1/profile`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        user: data.user.username\n      });\n    }).then(fetch(`http://localhost:3000/jmods`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(jmods => {\n      this.setState({\n        jmods\n      });\n    })).then(fetch(`http://localhost:3000/api/v1/feed`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: {\n        old_feed: JSON.stringify(old_feed)\n      }\n    }).then(res => res.json()).then(feed => {\n      localStorage.setItem(\"old_feed\", feed);\n    })) : this.props.history.push(\"/\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.jmod !== \"\" ? /*#__PURE__*/_jsxDEV(Jmod, {\n        jmod: this.props.jmod\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this) : this.state.jmods ? this.state.jmods.map(jmod => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"jmod\",\n            onClick: () => {\n              this.props.activeMod(jmod);\n            },\n            children: jmod.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 28\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/containers/JmodPage.js"],"names":["React","Component","Jmod","HomePage","state","jmod","props","componentDidMount","token","localStorage","getItem","old_feed","setItem","jagexFiller","twitter","reddit","fetch","method","headers","Authorization","then","res","json","data","setState","user","username","jmods","body","JSON","stringify","feed","history","push","render","map","activeMod","name"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\n//import Button from 'react-bootstrap/Button'\n//import Container from 'react-bootstrap/Container';\n//import Row from 'react-bootstrap/Row'\n//import Col from 'react-bootstrap/Col'\n//import Search from '../components/Search';\nimport Jmod from '../components/Jmod'\n\nclass HomePage extends Component {\n\n   state = {\n       jmod: this.props.jmod\n   }\n\n    componentDidMount() {\n        let token = localStorage.getItem(\"token\")\n        let old_feed = localStorage.getItem(\"old_feed\")\n        if (old_feed === null) {\n            localStorage.setItem(\"old_feed\", {jagexFiller: {twitter: [], reddit: []}}) \n        }\n        token ? (\n        fetch(`http://localhost:3000/api/v1/profile`,{\n            method: \"GET\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n                user: data.user.username\n            })\n        }))\n        .then(fetch(`http://localhost:3000/jmods`, {\n            method: \"GET\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        })\n        .then(res => res.json())\n        .then(jmods => {this.setState({jmods})}))\n        .then(fetch(`http://localhost:3000/api/v1/feed`, {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n            body: {\n                old_feed: JSON.stringify(old_feed)\n            }\n        })\n        .then(res => res.json())\n        .then(feed => {\n            localStorage.setItem(\"old_feed\", feed)}))\n     : this.props.history.push(\"/\") \n    }\n\n    \n\n\n    render() {\n        return(\n            <div>\n                {this.props.jmod !== \"\" ?\n                <Jmod jmod={this.props.jmod} /> : this.state.jmods ? this.state.jmods.map(jmod => {\n                    return <React.Fragment> <button className=\"jmod\" onClick={() => {this.props.activeMod(jmod)}}>{jmod.name}</button></React.Fragment>\n                }) : null }\n            </div>  \n        )\n    }\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}