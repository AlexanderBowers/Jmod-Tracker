{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/components/Comment.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comment = props => {\n  function createComment(tweet, jmod) {\n    let token = localStorage.getItem(\"token\");\n    fetch('http://localhost:3000/comments', {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        body: `${props.comment.data.body}`,\n        url: `https://twitter.com/${jmod.name}/status/${tweet.id}`,\n        jmod_id: `${jmod.id}`\n      })\n    }).then(res => res.json()).then(console.log());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    width: \"15%\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.comment.data.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `https://reddit.com/${props.comment.data.permalink}`,\n      children: [\"https://reddit.com/\", props.comment.data.permalink]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 17\n  }, this);\n};\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/mnt/c/Users/Alex/dev/flatiron/JmodTracker/Jmod-Tracker-frontend/frontend/src/components/Comment.js"],"names":["React","Comment","props","createComment","tweet","jmod","token","localStorage","getItem","fetch","method","headers","body","JSON","stringify","comment","data","url","name","id","jmod_id","then","res","json","console","log","permalink"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEI,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,WAASC,aAAT,CAAyBC,KAAzB,EAAgCC,IAAhC,EAAuC;AACnC,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAC,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACpCC,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASL,KAAM,EAD5B;AAEL,wBAAiB,kBAFZ;AAGL,kBAAW;AAHN,OAF2B;AAOpCM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBF,QAAAA,IAAI,EAAG,GAAEV,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmBJ,IAAK,EADhB;AAEjBK,QAAAA,GAAG,EAAG,uBAAsBZ,IAAI,CAACa,IAAK,WAAUd,KAAK,CAACe,EAAG,EAFxC;AAGjBC,QAAAA,OAAO,EAAG,GAAEf,IAAI,CAACc,EAAG;AAHH,OAAf;AAP8B,KAAnC,CAAL,CAaCE,IAbD,CAaMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAbb,EAcCF,IAdD,CAcMG,OAAO,CAACC,GAAR,EAdN;AAeH;;AACG,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAC,KAA5B;AAAA,4BACI;AAAA,gBAAIvB,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmBJ;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,IAAI,EAAG,sBAAqBV,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmBU,SAAU,EAA5D;AAAA,wCAAmFxB,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmBU,SAAtG;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOX,CA3BG;;KAAMzB,O;AA4BV,eAAeA,OAAf","sourcesContent":["import React from 'react'\n\n    const Comment = (props) => {\n\n        function createComment  (tweet, jmod)  {\n            let token = localStorage.getItem(\"token\")\n            fetch('http://localhost:3000/comments', {\n                method: \"POST\",\n                headers: {\n                    \"Authorization\": `Bearer ${token}`,\n                    \"Content-Type\" : \"application/json\",\n                    \"Accept\" : \"application/json\"\n                },\n                body: JSON.stringify({\n                    body: `${props.comment.data.body}`,\n                    url: `https://twitter.com/${jmod.name}/status/${tweet.id}`,\n                    jmod_id: `${jmod.id}`    \n                })\n            })\n            .then(res => res.json())\n            .then(console.log())\n        }\n            return (\n                <div className=\"card\" width=\"15%\">\n                    <p>{props.comment.data.body}</p>\n                    <a href={`https://reddit.com/${props.comment.data.permalink}`}>https://reddit.com/{props.comment.data.permalink}</a>\n                </div>\n\n            )\n}\nexport default Comment"]},"metadata":{},"sourceType":"module"}